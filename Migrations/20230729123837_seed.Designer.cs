// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using shoppingWebApi.Data;

#nullable disable

namespace shoppingWebApi.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230729123837_seed")]
    partial class seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductUser", b =>
                {
                    b.Property<int>("productsId")
                        .HasColumnType("int");

                    b.Property<int>("usersId")
                        .HasColumnType("int");

                    b.HasKey("productsId", "usersId");

                    b.HasIndex("usersId");

                    b.ToTable("ProductUser");
                });

            modelBuilder.Entity("shoppingWebApi.models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("fastCharge")
                        .HasColumnType("bit");

                    b.Property<string>("model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("price")
                        .HasColumnType("int");

                    b.Property<int>("rating")
                        .HasColumnType("int");

                    b.Property<int>("stock")
                        .HasColumnType("int");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("waterproof")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            brand = "Philips",
                            fastCharge = true,
                            model = "Series 7000",
                            price = 150,
                            rating = 5,
                            stock = 10,
                            type = "Shaver",
                            waterproof = true
                        },
                        new
                        {
                            Id = 2,
                            brand = "Braun",
                            fastCharge = false,
                            model = "Series 9",
                            price = 250,
                            rating = 4,
                            stock = 20,
                            type = "Shaver",
                            waterproof = true
                        },
                        new
                        {
                            Id = 3,
                            brand = "Panasonic",
                            fastCharge = true,
                            model = "Arc5",
                            price = 200,
                            rating = 4,
                            stock = 15,
                            type = "Shaver",
                            waterproof = true
                        },
                        new
                        {
                            Id = 4,
                            brand = "Philips",
                            fastCharge = false,
                            model = "OneBlade",
                            price = 50,
                            rating = 4,
                            stock = 30,
                            type = "Shaver",
                            waterproof = true
                        },
                        new
                        {
                            Id = 5,
                            brand = "Philips",
                            fastCharge = false,
                            model = "AquaTouch",
                            price = 80,
                            rating = 3,
                            stock = 20,
                            type = "Shaver",
                            waterproof = true
                        },
                        new
                        {
                            Id = 6,
                            brand = "Philips",
                            fastCharge = true,
                            model = "Series 5000",
                            price = 120,
                            rating = 5,
                            stock = 10,
                            type = "Shaver",
                            waterproof = true
                        },
                        new
                        {
                            Id = 7,
                            brand = "Braun",
                            fastCharge = true,
                            model = "Series 7",
                            price = 180,
                            rating = 4,
                            stock = 25,
                            type = "Shaver",
                            waterproof = true
                        },
                        new
                        {
                            Id = 8,
                            brand = "Braun",
                            fastCharge = false,
                            model = "Series 5",
                            price = 130,
                            rating = 4,
                            stock = 15,
                            type = "Shaver",
                            waterproof = true
                        },
                        new
                        {
                            Id = 9,
                            brand = "Braun",
                            fastCharge = false,
                            model = "Series 3 ProSkin",
                            price = 70,
                            rating = 3,
                            stock = 20,
                            type = "Shaver",
                            waterproof = true
                        },
                        new
                        {
                            Id = 10,
                            brand = "Panasonic",
                            fastCharge = true,
                            model = "Arc4",
                            price = 120,
                            rating = 4,
                            stock = 15,
                            type = "Shaver",
                            waterproof = true
                        },
                        new
                        {
                            Id = 11,
                            brand = "Panasonic",
                            fastCharge = false,
                            model = "Arc3",
                            price = 90,
                            rating = 4,
                            stock = 20,
                            type = "Shaver",
                            waterproof = true
                        },
                        new
                        {
                            Id = 12,
                            brand = "Panasonic",
                            fastCharge = true,
                            model = "ES-LV95-S",
                            price = 200,
                            rating = 5,
                            stock = 10,
                            type = "Shaver",
                            waterproof = true
                        });
                });

            modelBuilder.Entity("shoppingWebApi.models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.Property<byte[]>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("passwordSalt")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ProductUser", b =>
                {
                    b.HasOne("shoppingWebApi.models.Product", null)
                        .WithMany()
                        .HasForeignKey("productsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("shoppingWebApi.models.User", null)
                        .WithMany()
                        .HasForeignKey("usersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
